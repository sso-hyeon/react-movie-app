{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Components/HomeMovieDetail.tsx","Routes/Home.tsx","assets/noImage.png","Routes/Search.tsx","Components/TvShowsDetail.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","initial","animate","whileHover","xmlns","width","height","viewBox","path","d","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","transition","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","a","fetch","then","response","json","getMovieInfo","movieId","serchKeyword","getTvShows","getTvShowInfo","tvId","makeImagePath","id","format","BigCover","BigTitle","h3","MovieDetail","black","MovieGenres","MovieTagline","p","BigOverview","HomeMovieDetail","bigMovieMatch","useQuery","params","movieInfo","isLoading","style","backgroundImage","backdrop_path","title","release_date","runtime","vote_average","href","homepage","target","rel","genres","map","hash","i","name","tagline","overview","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","Slider","PrevBtn","NextBtn","Row","Box","Info","Overlay","BigMovie","rowVariants","hidden","back","window","innerWidth","visible","exit","boxVariants","scale","hover","y","delay","duration","InfoVariants","opacity","Home","movies","index","setIndex","leaving","setLeaving","setBack","toggleLeaving","clickedMovie","results","find","movie","String","totalMovies","length","maxIndex","Math","floor","AnimatePresence","custom","onExitComplete","slice","goBack","SearchList","ThumbImage","location","useLocation","URLSearchParams","search","console","log","list","noImage","backgroundPosition","backgroundSize","backgroundRepeat","original_title","TvShowsDetail","bigTvMatch","tvShowInfo","first_air_date","Tv","tvShows","tv","App","basename","process","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.b6bd52a9.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: fixed;\n    width: 100%;\n    top: 0;\n    height: 80px;\n    font-style: 14px;\n    padding: 20px 60px;\n    color: white;\n    background-image: linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0));\n`;\n\nconst Col = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n    margin-right: 50px;\n    width: 95px;\n    height: 25px;\n    fill: ${props => props.theme.red};\n    path {\n        stroke-width: 6px;\n        stroke: white;\n    }\n`;\n\nconst Items = styled.ul`\n    display: flex;\n    align-items: center;\n`;\n\nconst Item = styled.li`\n    margin-right: 20px;\n    color: ${props => props.theme.white.darker};\n    transition: color 0.3s ease-in-out;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    &:hover {\n        color: ${props => props.theme.white.lighter};\n    }\n`;\n\nconst Search = styled.form`\n    color: white;\n    display: flex;\n    align-items: center;\n    position: relative;\n    svg {\n        height: 25px;\n        cursor: pointer;\n    }\n`;\n\nconst Circle = styled(motion.span)`\n    position: absolute;\n    width: 5px;\n    height: 5px;\n    border-radius: 50%;\n    bottom: -10px;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    background-color: ${props => props.theme.red};\n`;\nconst Input = styled(motion.input)`\n    transform-origin: right center;\n    position: absolute;\n    right: 0;\n    width: 280px;\n    line-height: 40px;\n    text-indent: 40px;\n    z-index: -1;\n    color: white;\n    font-size: 16px;\n    background-color: rgba(0, 0, 0, 0.7);\n    border: 1px solid ${props => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n    normal: {\n        fillOpacity: 1\n    },\n    active: {\n        fillOpacity: [1, 0, 0.5, 0, 0.7, 1]\n    }\n};\nconst navVariants = {\n    top: {\n        backgroundColor: \"rgba(0,0,0,0)\"\n    },\n    scroll: {\n        backgroundColor: \"rgba(0,0,0,1)\"\n    }\n};\ninterface IForm {\n    keyword: string;\n}\n\nfunction Header() {\n    const [searchOpen, setSearchOpen] = useState(false);\n    const homeMatch = useRouteMatch(\"/\");\n    const tvMatch = useRouteMatch(\"/tv\");\n    const inputAnimation = useAnimation();\n    const navAnimation = useAnimation();\n    const { scrollY } = useViewportScroll();\n    const toggleSearch = () => {\n        if (searchOpen) {\n            inputAnimation.start({\n                scaleX: 0\n            });\n            // trigger the close animation\n        } else {\n            inputAnimation.start({\n                scaleX: 1\n            });\n            // trigger the open animation\n        }\n        setSearchOpen(prev => !prev);\n    };\n    useEffect(() => {\n        scrollY.onChange(() => {\n            if (scrollY.get() > 80) {\n                navAnimation.start(\"scroll\");\n            } else {\n                navAnimation.start(\"top\");\n            }\n        });\n    }, [navAnimation, scrollY]);\n    const history = useHistory();\n    const { register, handleSubmit } = useForm<IForm>();\n    const onValid = (data: IForm) => {\n        history.push(`/search?keyword=${data.keyword}`);\n    };\n\n    return (\n        <Nav variants={navVariants} initial=\"top\" animate={navAnimation}>\n            <Col>\n                <Logo\n                    variants={logoVariants}\n                    whileHover=\"active\"\n                    initial=\"normal\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"1024\"\n                    height=\"276.742\"\n                    viewBox=\"0 0 1024 276.742\"\n                >\n                    <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n                </Logo>\n                <Items>\n                    <Item>\n                        <Link to=\"/\">\n                            Home\n                            {homeMatch?.isExact && <Circle layoutId=\"dot\" />}\n                        </Link>\n                    </Item>\n                    <Item>\n                        <Link to=\"tv\">\n                            Tv Shows\n                            {tvMatch && <Circle layoutId=\"dot\" />}\n                        </Link>\n                    </Item>\n                </Items>\n            </Col>\n            <Col>\n                <Search onSubmit={handleSubmit(onValid)}>\n                    <motion.svg\n                        onClick={toggleSearch}\n                        animate={{ x: searchOpen ? -245 : 0 }}\n                        transition={{ type: \"linear\" }}\n                        fill=\"currentColor\"\n                        viewBox=\"0 0 20 20\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                            clipRule=\"evenodd\"\n                        ></path>\n                    </motion.svg>\n                    <Input\n                        {...register(\"keyword\", { required: true, minLength: 2 })}\n                        animate={inputAnimation}\n                        initial={{ scaleX: 0 }}\n                        transition={{ type: \"linear\" }}\n                        placeholder=\"Search for movie or TV show...\"\n                    />\n                </Search>\n            </Col>\n        </Nav>\n    );\n}\n\nexport default Header;\n","const API_KEY = \"c5db3f44685f4f998fe09a6423a816b2\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\ninterface Imovie {\n    id: number;\n    backdrop_path: string;\n    poster_path: string;\n    title: string;\n    overview: string;\n    release_date: string;\n}\n\nexport interface IGetMoviesResult {\n    dates: {\n        maximum: string;\n        minimum: string;\n    };\n    page: number;\n    results: Imovie[];\n    total_pages: number;\n    total_results: number;\n}\n\ninterface MovieGenres {\n    name: string;\n}\n\nexport interface IGetMovieInfo {\n    title: string;\n    backdrop_path: string;\n    overview: string;\n    release_date: string;\n    runtime: number;\n    original_language: string;\n    vote_average: string;\n    genres: MovieGenres[];\n    homepage: string;\n    tagline: string;\n}\n\ninterface SearchList {\n    id: number;\n    original_title: string;\n    name: string;\n    poster_path: string;\n    vote_average: number;\n    overview: string;\n    backdrop_path: string;\n    media_type: string;\n}\n\nexport interface IGetSearchLsit {\n    page: number;\n    results: SearchList[];\n    total_pages: number;\n    total_results: number;\n}\n\ninterface ITvShows {\n    id: number;\n    backdrop_path: string;\n    poster_path: string;\n    name: string;\n    overview: string;\n    release_date: string;\n}\n\nexport interface IGetTvShowsResult {\n    page: number;\n    results: ITvShows[];\n    total_pages: number;\n    total_results: number;\n}\n\ninterface TvShowGenres {\n    name: string;\n}\n\nexport interface IGetTvShowInfo {\n    name: string;\n    backdrop_path: string;\n    overview: string;\n    first_air_date: string;\n    runtime: number;\n    original_language: string;\n    vote_average: string;\n    genres: TvShowGenres[];\n    homepage: string;\n    tagline: string;\n}\n\nexport const getMovies = async () => {\n    return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(response =>\n        response.json()\n    );\n};\n\nexport const getMovieInfo = async (movieId?: string) => {\n    return fetch(`${BASE_PATH}/movie/${movieId}?api_key=${API_KEY}`).then(response =>\n        response.json()\n    );\n};\n\nexport const serchKeyword = async (keyword?: string) => {\n    return fetch(\n        `${BASE_PATH}/search/multi?api_key=${API_KEY}&language=en-US&query=${keyword}&include_adult=false`\n    ).then(response => response.json());\n};\n\nexport const getTvShows = async () => {\n    return fetch(`\n    ${BASE_PATH}/tv/popular?api_key=${API_KEY}&language=en-US`).then(response =>\n        response.json()\n    );\n};\n\nexport const getTvShowInfo = async (tvId?: string) => {\n    return fetch(`${BASE_PATH}/tv/${tvId}?api_key=${API_KEY}`).then(response =>\n        response.json()\n    );\n};\n","export function makeImagePath(id?: string, format?: string) {\n    return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { useQuery } from \"react-query\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getMovieInfo, IGetMovieInfo } from \"../api\";\nimport { makeImagePath } from \"../utils\";\n\nconst BigCover = styled.div`\n    width: 100%;\n    background-size: cover;\n    background-position: center center;\n    height: 400px;\n`;\nconst BigTitle = styled.h3`\n    color: ${props => props.theme.white.lighter};\n    padding: 20px;\n    font-size: 36px;\n    position: relative;\n    margin-top: -80px;\n`;\nconst MovieDetail = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-weight: bold;\n    span {\n        font-size: 25px;\n    }\n    a {\n        color: ${props => props.theme.black.darker};\n        background-color: ${props => props.theme.white.lighter};\n        line-height: 35px;\n        border-radius: 20px;\n        padding: 0 15px;\n    }\n`;\nconst MovieGenres = styled.ul`\n    display: flex;\n    align-items: center;\n    font-weight: bold;\n    margin: 30px 0;\n    li {\n        color: ${props => props.theme.black.darker};\n        background-color: ${props => props.theme.white.lighter};\n        line-height: 30px;\n        border-radius: 15px;\n        padding: 0 10px;\n        margin-right: 10px;\n    }\n`;\n\nconst MovieTagline = styled.p`\n    font-size: 30px;\n    font-weight: bold;\n    margin-bottom: 20px;\n`;\nconst BigOverview = styled.div`\n    padding: 30px 30px 40px;\n    font-size: 20px;\n    color: ${props => props.theme.white.lighter};\n`;\n\nfunction HomeMovieDetail() {\n    const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n    const { data: movieInfo, isLoading } = useQuery<IGetMovieInfo>(\"movieInfo\", () =>\n        getMovieInfo(bigMovieMatch?.params.movieId)\n    );\n\n    return (\n        <>\n            {isLoading ? (\n                <span>Loading...</span>\n            ) : (\n                <>\n                    <BigCover\n                        style={{\n                            backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                                movieInfo?.backdrop_path,\n                                \"w500\"\n                            )})`\n                        }}\n                    />\n                    <BigTitle>{movieInfo?.title}</BigTitle>\n                    <BigOverview>\n                        <MovieDetail>\n                            <span>{movieInfo?.release_date}</span>\n                            <span>{movieInfo?.runtime} min</span>\n                            <span>⭐{movieInfo?.vote_average}</span>\n                            <a\n                                href={movieInfo?.homepage}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                Homepage 👉\n                            </a>\n                        </MovieDetail>\n                        <MovieGenres>\n                            {movieInfo?.genres.map((hash, i) => (\n                                <li key={i + \"\"}>{hash.name}</li>\n                            ))}\n                        </MovieGenres>\n                        <MovieTagline>\"{movieInfo?.tagline}\"</MovieTagline>\n                        {movieInfo?.overview}\n                    </BigOverview>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default HomeMovieDetail;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getMovies, IGetMoviesResult } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport HomeMovieDetail from \"../Components/HomeMovieDetail\";\n\nconst Wrapper = styled.div`\n    background-color: black;\n    padding-bottom: 200px;\n`;\nconst Loader = styled.div`\n    height: 20vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 60px;\n    background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n        url(${props => props.bgPhoto});\n    background-size: cover;\n`;\nconst Title = styled.h2`\n    font-size: 4rem;\n    margin-bottom: 20px;\n`;\nconst Overview = styled.p`\n    font-size: 1.8rem;\n    width: 50%;\n`;\nconst Slider = styled.div`\n    position: relative;\n    top: -100px;\n`;\nconst PrevBtn = styled.div`\n    cursor: pointer;\n    z-index: 1;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 45px;\n    left: 0;\n    width: 60px;\n    height: 200px;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\nconst NextBtn = styled.div`\n    cursor: pointer;\n    z-index: 1;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 45px;\n    right: 0;\n    width: 60px;\n    height: 200px;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\nconst Row = styled(motion.div)`\n    display: grid;\n    gap: 5px;\n    grid-template-columns: repeat(6, 1fr);\n    position: absolute;\n    width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n    background-color: white;\n    background-image: url(${props => props.bgPhoto});\n    background-size: cover;\n    background-position: center center;\n    height: 200px;\n    cursor: pointer;\n    border-radius: 10px;\n    overflow: hidden;\n    &:first-child {\n        transform-origin: center left;\n    }\n    &:last-child {\n        transform-origin: center right;\n    }\n`;\nconst Info = styled(motion.div)`\n    padding: 10px;\n    background-color: ${props => props.theme.black.lighter};\n    opacity: 0;\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    h4 {\n        text-align: center;\n        font-size: 18px;\n    }\n`;\nconst Overlay = styled(motion.div)`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n    position: absolute;\n    width: 40vw;\n    min-width: 800px;\n    min-height: 700px;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    border-radius: 15px;\n    overflow: hidden;\n    background-color: ${props => props.theme.black.lighter};\n`;\n\nconst rowVariants = {\n    hidden: (back: boolean) => ({\n        x: back ? -window.innerWidth - 5 : window.innerWidth + 5\n    }),\n    visible: {\n        x: 0\n    },\n    exit: (back: boolean) => ({\n        x: back ? window.innerWidth + 5 : -window.innerWidth - 5\n    })\n};\nconst boxVariants = {\n    normal: {\n        scale: 1\n    },\n    hover: {\n        scale: 1.3,\n        y: -50,\n        transition: {\n            delay: 0.5,\n            duration: 0.3,\n            type: \"tween\"\n        }\n    }\n};\nconst InfoVariants = {\n    hover: {\n        opacity: 1,\n        transition: {\n            delay: 0.5,\n            duration: 0.3,\n            type: \"tween\"\n        }\n    }\n};\n\nconst offset = 6;\n\nfunction Home() {\n    const history = useHistory();\n    const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n    const { data: movies, isLoading } = useQuery<IGetMoviesResult>(\n        [\"movies\", \"nowPlaying\"],\n        getMovies\n    );\n    const { scrollY } = useViewportScroll();\n    const [index, setIndex] = useState(0);\n    const [leaving, setLeaving] = useState(false);\n    const [back, setBack] = useState(true);\n    const incraseIndex = () => {\n        if (movies) {\n            if (leaving) return;\n            toggleLeaving();\n            setBack(false);\n            const totalMovies = movies?.results.length;\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\n            setIndex(prev => (prev === maxIndex ? 0 : prev + 1));\n        }\n    };\n    const decraseIndex = () => {\n        if (movies) {\n            if (leaving) return;\n            toggleLeaving();\n            setBack(true);\n            const totalMovies = movies?.results.length - 1;\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\n            setIndex(prev => (prev === 0 ? maxIndex : prev - 1));\n        }\n    };\n    const toggleLeaving = () => setLeaving(prev => !prev);\n    const onBoxClicked = (movieId: number) => {\n        history.push(`/movies/${movieId}`);\n    };\n    const onOverlayClick = () => history.goBack();\n    const clickedMovie =\n        bigMovieMatch?.params.movieId &&\n        movies?.results.find(movie => String(movie.id) === bigMovieMatch.params.movieId);\n\n    return (\n        <Wrapper>\n            {isLoading ? (\n                <Loader>Loading...</Loader>\n            ) : (\n                <>\n                    <Banner\n                        bgPhoto={makeImagePath(movies?.results[0].backdrop_path || \"\")}\n                    >\n                        <Title>{movies?.results[0].title}</Title>\n                        <Overview>{movies?.results[0].overview}</Overview>\n                    </Banner>\n                    <Slider>\n                        <PrevBtn onClick={decraseIndex}>&lt;</PrevBtn>\n                        <NextBtn onClick={incraseIndex}>&gt;</NextBtn>\n                        <AnimatePresence\n                            custom={back}\n                            initial={false}\n                            onExitComplete={toggleLeaving}\n                        >\n                            <Row\n                                custom={back}\n                                variants={rowVariants}\n                                initial=\"hidden\"\n                                animate=\"visible\"\n                                exit=\"exit\"\n                                transition={{ type: \"linear\", duration: 1 }}\n                                key={index}\n                            >\n                                {movies?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map(movie => (\n                                        <Box\n                                            layoutId={movie.id + \"\"}\n                                            key={movie.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(movie.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(\n                                                movie.backdrop_path,\n                                                \"w500\"\n                                            )}\n                                        >\n                                            <Info variants={InfoVariants}>\n                                                <h4>{movie.title}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <AnimatePresence>\n                        {bigMovieMatch ? (\n                            <>\n                                <Overlay\n                                    onClick={onOverlayClick}\n                                    animate={{ opacity: 1 }}\n                                    exit={{ opacity: 0 }}\n                                />\n                                <BigMovie\n                                    style={{ top: scrollY.get() + 100 }}\n                                    layoutId={bigMovieMatch.params.movieId}\n                                >\n                                    {clickedMovie && <HomeMovieDetail />}\n                                </BigMovie>\n                            </>\n                        ) : null}\n                    </AnimatePresence>\n                </>\n            )}\n        </Wrapper>\n    );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/noImage.74c6260b.png\";","import { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { IGetSearchLsit, serchKeyword } from \"../api\";\nimport { makeImagePath } from \"../utils\";\n\nimport noImage from \"../assets/noImage.png\";\n\nconst SearchList = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    width: 95%;\n    margin: 20vh auto 0;\n    padding-bottom: 200px;\n`;\nconst ThumbImage = styled.div`\n    width: 16%;\n    background-size: cover;\n    background-position: center center;\n    height: 130px;\n    margin: 0 5px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding: 10px;\n    font-size: 20px;\n    font-weight: bold;\n`;\n\nfunction Search() {\n    const location = useLocation();\n    const keyword = new URLSearchParams(location.search).get(\"keyword\");\n    const { data, isLoading } = useQuery<IGetSearchLsit>(\"movieInfo\", () =>\n        serchKeyword(String(keyword))\n    );\n\n    console.log(isLoading);\n\n    return (\n        <>\n            {isLoading ? (\n                <span>Loading...</span>\n            ) : (\n                <>\n                    <SearchList>\n                        {data &&\n                            data?.results.map(list => (\n                                <ThumbImage\n                                    key={list.id}\n                                    style={{\n                                        backgroundImage: list.backdrop_path\n                                            ? `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                                                  list.backdrop_path,\n                                                  \"w500\"\n                                              )})`\n                                            : `linear-gradient(to top, black, transparent), url(${noImage})`,\n                                        backgroundPosition: \"center center\",\n                                        backgroundSize: \"auto 130px\",\n                                        backgroundRepeat: \"no-repeat\"\n                                    }}\n                                >\n                                    <span>\n                                        {list.original_title\n                                            ? list.original_title\n                                            : list.name}\n                                    </span>\n                                    <span>⭐{list.vote_average}</span>\n                                </ThumbImage>\n                            ))}\n                    </SearchList>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default Search;\n","import { useQuery } from \"react-query\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getTvShowInfo, IGetTvShowInfo } from \"../api\";\nimport { makeImagePath } from \"../utils\";\n\nconst BigCover = styled.div`\n    width: 100%;\n    background-size: cover;\n    background-position: center center;\n    height: 400px;\n`;\nconst BigTitle = styled.h3`\n    color: ${props => props.theme.white.lighter};\n    padding: 20px;\n    font-size: 36px;\n    position: relative;\n    margin-top: -80px;\n`;\nconst MovieDetail = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-weight: bold;\n    span {\n        font-size: 25px;\n    }\n    a {\n        color: ${props => props.theme.black.darker};\n        background-color: ${props => props.theme.white.lighter};\n        line-height: 35px;\n        border-radius: 20px;\n        padding: 0 15px;\n    }\n`;\nconst MovieGenres = styled.ul`\n    display: flex;\n    align-items: center;\n    font-weight: bold;\n    margin: 30px 0;\n    li {\n        color: ${props => props.theme.black.darker};\n        background-color: ${props => props.theme.white.lighter};\n        line-height: 30px;\n        border-radius: 15px;\n        padding: 0 10px;\n        margin-right: 10px;\n    }\n`;\n\nconst MovieTagline = styled.p`\n    font-size: 30px;\n    font-weight: bold;\n    margin-bottom: 20px;\n`;\nconst BigOverview = styled.div`\n    padding: 30px 30px 40px;\n    font-size: 20px;\n    color: ${props => props.theme.white.lighter};\n`;\n\nfunction TvShowsDetail() {\n    const bigTvMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\n    const { data: tvShowInfo, isLoading } = useQuery<IGetTvShowInfo>(\"tvInfo\", () =>\n        getTvShowInfo(bigTvMatch?.params.tvId)\n    );\n\n    return (\n        <>\n            {isLoading ? (\n                <span>Loading...</span>\n            ) : (\n                <>\n                    <BigCover\n                        style={{\n                            backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                                tvShowInfo?.backdrop_path,\n                                \"w500\"\n                            )})`\n                        }}\n                    />\n                    <BigTitle>{tvShowInfo?.name}</BigTitle>\n                    <BigOverview>\n                        <MovieDetail>\n                            <span>{tvShowInfo?.first_air_date}</span>\n                            <span>⭐{tvShowInfo?.vote_average}</span>\n                            <a\n                                href={tvShowInfo?.homepage}\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                            >\n                                Homepage 👉\n                            </a>\n                        </MovieDetail>\n                        <MovieGenres>\n                            {tvShowInfo?.genres.map((hash, i) => (\n                                <li key={i + \"\"}>{hash.name}</li>\n                            ))}\n                        </MovieGenres>\n                        {tvShowInfo?.tagline && (\n                            <MovieTagline>\"{tvShowInfo?.tagline}\"</MovieTagline>\n                        )}\n                        {tvShowInfo?.overview}\n                    </BigOverview>\n                </>\n            )}\n        </>\n    );\n}\n\nexport default TvShowsDetail;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getTvShows, IGetTvShowsResult } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport TvShowsDetail from \"../Components/TvShowsDetail\";\n\nconst Wrapper = styled.div`\n    background-color: black;\n    padding-bottom: 200px;\n`;\nconst Loader = styled.div`\n    height: 20vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst Banner = styled.div<{ bgPhoto: string }>`\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 60px;\n    background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n        url(${props => props.bgPhoto});\n    background-size: cover;\n`;\nconst Title = styled.h2`\n    font-size: 4rem;\n    margin-bottom: 20px;\n`;\nconst Overview = styled.p`\n    font-size: 1.8rem;\n    width: 50%;\n`;\nconst Slider = styled.div`\n    position: relative;\n    top: -100px;\n`;\nconst PrevBtn = styled.div`\n    cursor: pointer;\n    z-index: 1;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 45px;\n    left: 0;\n    width: 60px;\n    height: 200px;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\nconst NextBtn = styled.div`\n    cursor: pointer;\n    z-index: 1;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 45px;\n    right: 0;\n    width: 60px;\n    height: 200px;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\nconst Row = styled(motion.div)`\n    display: grid;\n    gap: 5px;\n    grid-template-columns: repeat(6, 1fr);\n    position: absolute;\n    width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n    background-color: white;\n    background-image: url(${props => props.bgPhoto});\n    background-size: cover;\n    background-position: center center;\n    height: 200px;\n    cursor: pointer;\n    border-radius: 10px;\n    overflow: hidden;\n    &:first-child {\n        transform-origin: center left;\n    }\n    &:last-child {\n        transform-origin: center right;\n    }\n`;\nconst Info = styled(motion.div)`\n    padding: 10px;\n    background-color: ${props => props.theme.black.lighter};\n    opacity: 0;\n    position: absolute;\n    width: 100%;\n    bottom: 0;\n    h4 {\n        text-align: center;\n        font-size: 18px;\n    }\n`;\nconst Overlay = styled(motion.div)`\n    position: fixed;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n`;\nconst BigMovie = styled(motion.div)`\n    position: absolute;\n    width: 40vw;\n    min-width: 800px;\n    min-height: 700px;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    border-radius: 15px;\n    overflow: hidden;\n    background-color: ${props => props.theme.black.lighter};\n`;\n\nconst rowVariants = {\n    hidden: (back: boolean) => ({\n        x: back ? -window.innerWidth - 5 : window.innerWidth + 5\n    }),\n    visible: {\n        x: 0\n    },\n    exit: (back: boolean) => ({\n        x: back ? window.innerWidth + 5 : -window.innerWidth - 5\n    })\n};\nconst boxVariants = {\n    normal: {\n        scale: 1\n    },\n    hover: {\n        scale: 1.3,\n        y: -50,\n        transition: {\n            delay: 0.5,\n            duration: 0.3,\n            type: \"tween\"\n        }\n    }\n};\nconst InfoVariants = {\n    hover: {\n        opacity: 1,\n        transition: {\n            delay: 0.5,\n            duration: 0.3,\n            type: \"tween\"\n        }\n    }\n};\n\nconst offset = 6;\n\nfunction Tv() {\n    const history = useHistory();\n    const bigMovieMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\n    const { data: tvShows, isLoading } = useQuery<IGetTvShowsResult>(\n        [\"tvShows\", \"popular\"],\n        getTvShows\n    );\n    const { scrollY } = useViewportScroll();\n    const [index, setIndex] = useState(0);\n    const [leaving, setLeaving] = useState(false);\n    const [back, setBack] = useState(true);\n    const incraseIndex = () => {\n        if (tvShows) {\n            if (leaving) return;\n            toggleLeaving();\n            setBack(false);\n            const totalMovies = tvShows?.results.length;\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\n            setIndex(prev => (prev === maxIndex ? 0 : prev + 1));\n        }\n    };\n    const decraseIndex = () => {\n        if (tvShows) {\n            if (leaving) return;\n            toggleLeaving();\n            setBack(true);\n            const totalMovies = tvShows?.results.length - 1;\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\n            setIndex(prev => (prev === 0 ? maxIndex : prev - 1));\n        }\n    };\n    const toggleLeaving = () => setLeaving(prev => !prev);\n    const onBoxClicked = (tvId: number) => {\n        history.push(`/tv/${tvId}`);\n    };\n    const onOverlayClick = () => history.goBack();\n    const clickedMovie =\n        bigMovieMatch?.params.tvId &&\n        tvShows?.results.find(tv => String(tv.id) === bigMovieMatch.params.tvId);\n\n    return (\n        <Wrapper>\n            {isLoading ? (\n                <Loader>Loading...</Loader>\n            ) : (\n                <>\n                    <Banner\n                        bgPhoto={makeImagePath(tvShows?.results[0].backdrop_path || \"\")}\n                    >\n                        <Title>{tvShows?.results[0].name}</Title>\n                        <Overview>{tvShows?.results[0].overview}</Overview>\n                    </Banner>\n                    <Slider>\n                        <PrevBtn onClick={decraseIndex}>&lt;</PrevBtn>\n                        <NextBtn onClick={incraseIndex}>&gt;</NextBtn>\n                        <AnimatePresence\n                            custom={back}\n                            initial={false}\n                            onExitComplete={toggleLeaving}\n                        >\n                            <Row\n                                custom={back}\n                                variants={rowVariants}\n                                initial=\"hidden\"\n                                animate=\"visible\"\n                                exit=\"exit\"\n                                transition={{ type: \"linear\", duration: 1 }}\n                                key={index}\n                            >\n                                {tvShows?.results\n                                    .slice(1)\n                                    .slice(offset * index, offset * index + offset)\n                                    .map(tv => (\n                                        <Box\n                                            layoutId={tv.id + \"\"}\n                                            key={tv.id}\n                                            whileHover=\"hover\"\n                                            initial=\"normal\"\n                                            variants={boxVariants}\n                                            onClick={() => onBoxClicked(tv.id)}\n                                            transition={{ type: \"tween\" }}\n                                            bgPhoto={makeImagePath(\n                                                tv.backdrop_path,\n                                                \"w500\"\n                                            )}\n                                        >\n                                            <Info variants={InfoVariants}>\n                                                <h4>{tv.name}</h4>\n                                            </Info>\n                                        </Box>\n                                    ))}\n                            </Row>\n                        </AnimatePresence>\n                    </Slider>\n                    <AnimatePresence>\n                        {bigMovieMatch ? (\n                            <>\n                                <Overlay\n                                    onClick={onOverlayClick}\n                                    animate={{ opacity: 1 }}\n                                    exit={{ opacity: 0 }}\n                                />\n                                <BigMovie\n                                    style={{ top: scrollY.get() + 100 }}\n                                    layoutId={bigMovieMatch.params.tvId}\n                                >\n                                    {clickedMovie && <TvShowsDetail />}\n                                </BigMovie>\n                            </>\n                        ) : null}\n                    </AnimatePresence>\n                </>\n            )}\n        </Wrapper>\n    );\n}\n\nexport default Tv;\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Routes/Home\";\r\nimport Search from \"./Routes/Search\";\r\nimport Tv from \"./Routes/Tv\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Header />\r\n            <Switch>\r\n                <Route path={[\"/tv\", \"/tv/:tvId\"]}>\r\n                    <Tv />\r\n                </Route>\r\n                <Route path=\"/search\">\r\n                    <Search />\r\n                </Route>\r\n                <Route path={[\"/\", \"/movies/:movieId\"]}>\r\n                    <Home />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport App from \"./App\";\r\nimport { theme } from \"./theme\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  overflow-x: hidden;\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  color:${props => props.theme.white.lighter};\r\n  line-height: 1.2;\r\n  background-color: black;\r\n  \r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\nconst client = new QueryClient();\r\n\r\nReactDOM.render(\r\n    <>\r\n        <RecoilRoot>\r\n            <QueryClientProvider client={client}>\r\n                <ThemeProvider theme={theme}>\r\n                    <GlobalStyle />\r\n                    <App />\r\n                </ThemeProvider>\r\n            </QueryClientProvider>\r\n        </RecoilRoot>\r\n    </>,\r\n    document.getElementById(\"root\")\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n    red: \"#e51013\",\n    black: {\n        veryDark: \"#141414\",\n        darker: \"#181818\",\n        lighter: \"#2f2f2f\"\n    },\n    white: {\n        lighter: \"#fff\",\n        darker: \"#e5e5e5\"\n    }\n};\n"],"sourceRoot":""}